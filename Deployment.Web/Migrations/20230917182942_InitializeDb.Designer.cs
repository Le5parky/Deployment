// <auto-generated />
using System;
using Deployment.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Deployment.Web.Migrations
{
    [DbContext(typeof(DeploymentDbContext))]
    [Migration("20230917182942_InitializeDb")]
    partial class InitializeDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Deployment.DAL.Entities.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.DeployAction", b =>
                {
                    b.Property<int>("DeployActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeployActionId"));

                    b.Property<bool>("ApiService")
                        .HasColumnType("bit");

                    b.Property<bool>("Client")
                        .HasColumnType("bit");

                    b.Property<bool>("DbScripts")
                        .HasColumnType("bit");

                    b.Property<int>("EnvironmentId")
                        .HasColumnType("int");

                    b.Property<bool>("PowerShell")
                        .HasColumnType("bit");

                    b.Property<bool>("TaskScheduler")
                        .HasColumnType("bit");

                    b.Property<bool>("WebServer")
                        .HasColumnType("bit");

                    b.Property<bool>("WebSite")
                        .HasColumnType("bit");

                    b.Property<bool>("WindowsService")
                        .HasColumnType("bit");

                    b.HasKey("DeployActionId");

                    b.HasIndex("EnvironmentId")
                        .IsUnique();

                    b.ToTable("DeployAction");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.DeployHistory", b =>
                {
                    b.Property<int>("DeployHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeployHistoryId"));

                    b.Property<string>("DeployStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnvironmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TargetVersionId")
                        .HasColumnType("int");

                    b.HasKey("DeployHistoryId");

                    b.HasIndex("EnvironmentId");

                    b.HasIndex("TargetVersionId");

                    b.ToTable("DeployHistory");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.Environment", b =>
                {
                    b.Property<int>("EnvironmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnvironmentId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnvironmentHostId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnvironmentId");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("EnvironmentHostId");

                    b.ToTable("Environment");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.EnvironmentHost", b =>
                {
                    b.Property<int>("EnvironmentHostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnvironmentHostId"));

                    b.Property<int?>("HostId")
                        .HasColumnType("int");

                    b.HasKey("EnvironmentHostId");

                    b.HasIndex("HostId");

                    b.ToTable("EnvironmentHost");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.EnvironmentParameters", b =>
                {
                    b.Property<int>("EnvironmentParametersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnvironmentParametersId"));

                    b.Property<int?>("EnvironmentId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnvironmentParametersId");

                    b.HasIndex("EnvironmentId");

                    b.ToTable("EnvironmentParameters");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.Host", b =>
                {
                    b.Property<int>("HostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HostId"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FQDN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("HostId");

                    b.ToTable("Host");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.TargetVersion", b =>
                {
                    b.Property<int>("TargetVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TargetVersionId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("Build")
                        .HasColumnType("int");

                    b.Property<string>("Lable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Major")
                        .HasColumnType("int");

                    b.Property<int>("Minot")
                        .HasColumnType("int");

                    b.HasKey("TargetVersionId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("TargetVersion");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("DefApplicationApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("PerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("DefApplicationApplicationId");

                    b.HasIndex("TeamId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.DeployAction", b =>
                {
                    b.HasOne("Deployment.DAL.Entities.Environment", "Environment")
                        .WithOne("DeployAction")
                        .HasForeignKey("Deployment.DAL.Entities.DeployAction", "EnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Environment");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.DeployHistory", b =>
                {
                    b.HasOne("Deployment.DAL.Entities.Environment", "Environment")
                        .WithMany()
                        .HasForeignKey("EnvironmentId");

                    b.HasOne("Deployment.DAL.Entities.TargetVersion", "TargetVersion")
                        .WithMany()
                        .HasForeignKey("TargetVersionId");

                    b.Navigation("Environment");

                    b.Navigation("TargetVersion");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.Environment", b =>
                {
                    b.HasOne("Deployment.DAL.Entities.Application", "Application")
                        .WithMany("Environments")
                        .HasForeignKey("ApplicationId");

                    b.HasOne("Deployment.DAL.Entities.EnvironmentHost", "EnvironmentHost")
                        .WithMany()
                        .HasForeignKey("EnvironmentHostId");

                    b.Navigation("Application");

                    b.Navigation("EnvironmentHost");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.EnvironmentHost", b =>
                {
                    b.HasOne("Deployment.DAL.Entities.Host", "Host")
                        .WithMany()
                        .HasForeignKey("HostId");

                    b.Navigation("Host");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.EnvironmentParameters", b =>
                {
                    b.HasOne("Deployment.DAL.Entities.Environment", null)
                        .WithMany("EnvironmentParameters")
                        .HasForeignKey("EnvironmentId");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.TargetVersion", b =>
                {
                    b.HasOne("Deployment.DAL.Entities.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.User", b =>
                {
                    b.HasOne("Deployment.DAL.Entities.Application", "DefApplication")
                        .WithMany()
                        .HasForeignKey("DefApplicationApplicationId");

                    b.HasOne("Deployment.DAL.Entities.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamId");

                    b.Navigation("DefApplication");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.Application", b =>
                {
                    b.Navigation("Environments");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.Environment", b =>
                {
                    b.Navigation("DeployAction");

                    b.Navigation("EnvironmentParameters");
                });

            modelBuilder.Entity("Deployment.DAL.Entities.Team", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
